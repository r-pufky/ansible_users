---
# yamllint disable rule:line-length
###############################################################################
# Add User/Group for Role
###############################################################################
# Adds a given user/group for calling role.

- name: 'Role account add | install packages'
  ansible.builtin.include_role:
    name: 'r_pufky.srv.apt'
  vars:
    apt_packages:
      - '{{ users_role_packages }}'
      - '{{ users_role_high_entropy_packages if users_high_entropy_enable else [] }}'
      - '{{ users_role_ssh_keygen_packages }}'
    apt_package_update_cache: true

- name: 'Role account add | query user {{ users_role_user.name | default("") }}'
  when: users_role_create_user
  ansible.builtin.command: 'id {{ users_role_user.name }}'
  register: _users_role_user_exists
  changed_when: _users_role_user_exists.rc > 0
  failed_when: false

- name: 'Role account add | query group {{ users_role_group.name | default("") }}'
  when: users_role_create_group
  ansible.builtin.command: 'groups {{ users_role_group.name }}'
  register: _users_role_group_exists
  changed_when: _users_role_group_exists.rc > 0
  failed_when: false

- name: 'Role account add | create group {{ users_role_group.name | default("") }}'
  when: users_role_create_group and _users_role_group_exists.rc != 0
  ansible.builtin.group:
    force: '{{ users_role_group.force | default(false) }}'
    gid: '{{ users_role_group.gid | default(omit) }}'
    local: '{{ users_role_group.local | default(false) }}'
    name: '{{ users_role_group.name }}'
    non_unique: '{{ users_role_group.non_unique | default(false) }}'
    state: 'present'
    system: '{{ users_role_group.system | default(false) }}'

- name: 'Role account add | create user {{ users_role_user.name | default("") }} {{ users_role_user.comment | default("") }}'  # noqa name[template] readability
  when: users_role_create_user and _users_role_user_exists.rc != 0
  ansible.builtin.user:
    append: '{{ users_role_user.append | default(false) }}'
    authorization: '{{ users_role_user.authorization | default(omit) }}'
    comment: '{{ users_role_user.comment | default(omit) }}'
    create_home: '{{ users_role_user.create_home | default(true) }}'
    expires: '{{ users_role_user.expires | default(-1) }}'
    force: '{{ users_role_user.force | default(false) }}'
    generate_ssh_key: '{{ users_role_user.generate_ssh_key | default(false) }}'
    group: '{{ users_role_user.group | default(omit) }}'
    groups: '{{ users_role_user.groups | default(omit) }}'
    hidden: '{{ users_role_user.hidden | default(omit) }}'
    home: '{{ users_role_user.home | default("/nonexistent") }}'
    local: '{{ users_role_user.local | default(false) }}'
    login_class: '{{ users_role_user.login_class | default(omit) }}'
    move_home: '{{ users_role_user.move_home | default(false) }}'
    name: '{{ users_role_user.name }}'
    non_unique: '{{ users_role_user.non_unique | default(false) }}'
    password: '{{ users_role_user.password | default("!") }}'
    password_expire_max: '{{ users_role_user.password_expire_max | default(omit) }}'
    password_expire_min: '{{ users_role_user.password_expire_min | default(omit) }}'
    password_expire_warn: '{{ users_role_user.password_expire_warn | default(omit) }}'
    password_lock: '{{ users_role_user.password_lock | default(false) }}'
    profile: '{{ users_role_user.profile | default(omit) }}'
    remove: '{{ users_role_user.remove | default(false) }}'
    role: '{{ users_role_user.role | default(omit) }}'
    seuser: '{{ users_role_user.seuser | default(omit) }}'
    shell: '{{ users_role_user.shell | default("/usr/sbin/nologin") }}'
    skeleton: '{{ users_role_user.skeleton | default(omit) }}'
    ssh_key_bits: '{{ users_role_user.ssh_key_bits | default(omit) }}'
    ssh_key_comment: '{{ users_role_user.ssh_key_comment | default("ansible-generated") }}'
    ssh_key_file: '{{ users_role_user.ssh_key_file | default(".ssh/id_rsa") }}'
    ssh_key_passphrase: '{{ users_role_user.ssh_key_passphrase | default(lookup("ansible.builtin.password", "/dev/null", chars=["ascii_letters", "digits"], length=32)) }}'
    ssh_key_type: '{{ users_role_user.ssh_key_type | default("rsa") }}'
    state: 'present'
    system: '{{ users_role_user.system | default(false) }}'
    uid: '{{ users_role_user.uid | default(omit) }}'
    umask: '{{ users_role_user.umask | default(omit) }}'
    update_password: '{{ users_role_user.update_password | default("always") }}'
