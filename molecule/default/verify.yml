---
- name: 'Verify | minimum group specification'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Verify | minimum group specification |
        query group minimum_group_options
      ansible.builtin.getent:
        database: 'group'
        key: 'minimum_group_options'

    - name: >
        Verify | minimum group specification |
        assert group minimum_group_options
      ansible.builtin.assert:
        quiet: true
        that:
          - '"minimum_group_options" in ansible_facts.getent_group'
          - ansible_facts.getent_group.minimum_group_options[1] == '800'
        fail_msg: '✘ minimum_group_options does not exist or not gid=800.'

- name: 'Verify | minimum user specification'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name:
        'Verify | minimum user specification | query user minimum_user_options'
      ansible.builtin.getent:
        database: 'passwd'
        key: 'minimum_user_options'

    - name: >
        Verify | minimum user specification |
        assert user minimum_user_options
      ansible.builtin.assert:
        quiet: true
        that:
          - '"minimum_user_options" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.minimum_user_options[1] == '810'
          - ansible_facts.getent_passwd.minimum_user_options[4] == '/home/minimum_user_options'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.minimum_user_options[5] == '/bin/bash'
        fail_msg: >
          ✘ minimum_user_options does not exist, not uid=810, or home directory
          does not exist.

    - name: 'Verify | minimum user specification | /home/minimum_user_options'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name:
          'Verify | minimum user specification | /home/minimum_user_options'
        test_file: '/home/minimum_user_options'
        test_owner: '810'
        test_group: '1000'
        test_mode: '0755'
        test_state: 'directory'
        test_diff: true

- name: 'Verify | all group options specified'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name:
        'Verify | all group options specified | query group group_all_options'
      ansible.builtin.getent:
        database: 'group'
        key: 'group_all_options'

    - name: >
        Verify | all group options specified | assert group group_all_options
      ansible.builtin.assert:
        quiet: true
        that:
          - '"group_all_options" in ansible_facts.getent_group'
          - ansible_facts.getent_group.group_all_options[1] == '820'
        fail_msg: '✘ group_all_options does not exist or not gid=820.'

- name: 'Verify | user with include_group explicit group'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Verify | user with include_group explicit group |
        query group explicit_user_group
      ansible.builtin.getent:
        database: 'group'
        key: 'explicit_user_group'

    - name: >
        Verify | user with include_group explicit group |
        query user explicit_user_group
      ansible.builtin.getent:
        database: 'passwd'
        key: 'explicit_user_group'

    - name: >
        Verify | user with include_group explicit group |
        assert group explicit_user_group
      ansible.builtin.assert:
        quiet: true
        that:
          - '"explicit_user_group" in ansible_facts.getent_group'
          - ansible_facts.getent_group.explicit_user_group[1] == '830'
        fail_msg: '✘ explicit_user_group does not exist or not gid=830.'

    - name: >
        Verify | user with include_group explicit group |
        assert user explicit_user_group
      ansible.builtin.assert:
        quiet: true
        that:
          - '"explicit_user_group" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.explicit_user_group[1] == '830'
          - ansible_facts.getent_passwd.explicit_user_group[2] == '830'
          - ansible_facts.getent_passwd.explicit_user_group[4] == '/home/explicit_user_group'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.explicit_user_group[5] == '/bin/bash'
        fail_msg: >
          ✘ explicit_user_group does not exist, not uid=830, or home directory
          does not exist.

    - name: >
        Verify | user with include_group explicit group |
        /home/explicit_user_group
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: >
          Verify | user with include_group explicit group |
          /home/explicit_user_group
        test_file: '/home/explicit_user_group'
        test_owner: '830'
        test_group: '830'
        test_mode: '0755'
        test_state: 'directory'
        test_diff: true

- name: 'Verify | user with all options'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Verify | user with all options | query group user_all_options'
      ansible.builtin.getent:
        database: 'group'
        key: 'user_all_options'

    - name: 'Verify | user with all options | query user user_all_options'
      ansible.builtin.getent:
        database: 'passwd'
        key: 'user_all_options'

    - name: 'Verify | user with all options | assert group user_all_options'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_all_options" in ansible_facts.getent_group'
          - ansible_facts.getent_group.user_all_options[1] == '840'
        fail_msg: '✘ user_all_options does not exist or not gid=840.'

    - name: 'Verify | user with all options | assert user user_all_options'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_all_options" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.user_all_options[1] == '840'
          - ansible_facts.getent_passwd.user_all_options[2] == '840'
          - ansible_facts.getent_passwd.user_all_options[4] == '/home/user_all_options'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.user_all_options[5] == '/bin/bash'
        fail_msg: >
          ✘ user_all_options does not exist, not uid=830, or home directory
          does not exist.

    - name: 'Verify | user with all options | /home/user_all_options'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: 'Verify | user with all options | /home/user_all_options'
        test_file: '/home/user_all_options'
        test_owner: '840'
        test_group: '840'
        test_mode: '0755'
        test_state: 'directory'
        test_diff: true

- name: 'Verify | user lockdown'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Verify | user lockdown | /home/user_lockdown'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: 'Verify | user lockdown | /home/user_lockdown'
        test_file: '/home/user_lockdown'
        test_owner: 'user_lockdown'
        test_group: 'user_lockdown'
        test_mode: '0700'
        test_state: 'directory'
        test_diff: true

    - name: 'Verify | user lockdown | /home/user_lockdown/.profile'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: 'Verify | user lockdown | /home/user_lockdown/.profile'
        test_file: '/home/user_lockdown/.profile'
        test_owner: 'user_lockdown'
        test_group: 'user_lockdown'
        test_mode: '0600'
        test_state: 'file'
        test_diff: true

- name: 'Verify | alt user settings (same user with different settings)'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Verify |
        alt user settings (same user with different settings) |
        query user minimum_user_options
      ansible.builtin.getent:
        database: 'passwd'
        key: 'user_group'

    - name: >
        Verify |
        alt user settings (same user with different settings) |
        assert user minimum_user_options
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_group" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.user_group[1] == '860'
          - ansible_facts.getent_passwd.user_group[2] == '860'
          - ansible_facts.getent_passwd.user_group[4] == '/home/user_group'
          - ansible_facts.getent_passwd.user_group[5] == '/bin/bash'
        fail_msg: >
          ✘ user_group does not exist, not uid=810, or home directory does not
          exist.

    - name: >
        Verify |
        alt user settings (same user with different settings) |
        /home/user_group
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: >
          Verify |
          alt user settings (same user with different settings) |
          /home/user_group
        test_file: '/home/user_group'
        test_owner: '860'
        test_group: '860'
        test_mode: '0755'
        test_state: 'directory'
        test_diff: true

- name: 'Verify | high-entropy packages'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Verify | high-entropy packages | gather installed packages'
      ansible.builtin.package_facts:

    - name: 'Verify | high-entropy packages | assert rng-tools installed'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"rng-tools5" in ansible_facts.packages'
        fail_msg: >
          ✘ rng-tools5 should be install on containers for high-entropy.
