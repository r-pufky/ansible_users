---
- name: 'Role account add | verify | user/group defaults'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Role account add | verify | user/group defaults |
        query user_all_defaults_valid
      ansible.builtin.getent:
        database: 'passwd'
        key: 'user_all_defaults_valid'

    - name: >
        Role account add | verify | user/group defaults |
        assert user user_all_defaults_valid
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_all_defaults_valid" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.user_all_defaults_valid[1] == '1000'
          - ansible_facts.getent_passwd.user_all_defaults_valid[2] == '1000'
          - ansible_facts.getent_passwd.user_all_defaults_valid[4] == '/nonexistent'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.user_all_defaults_valid[5] == '/usr/sbin/nologin'  # yamllint disable-line rule:line-length
        success_msg: 'user_all_defaults_valid correct.'
        fail_msg: '✘ user_all_defaults_valid incorrect passwd values.'

    - name: >
        Role account add | verify | user/group defaults |
        query group_all_defaults_valid
      ansible.builtin.getent:
        database: 'group'
        key: 'group_all_defaults_valid'

    - name: >
        Role account add | verify | user/group defaults |
        assert group group_all_defaults_valid
      ansible.builtin.assert:
        quiet: true
        that:
          - '"group_all_defaults_valid" in ansible_facts.getent_group'
          - ansible_facts.getent_group.group_all_defaults_valid[1] == '1001'
        success_msg: 'group_all_defaults_valid correct.'
        fail_msg: '✘ group_all_defaults_valid incorrect passwd values.'

- name: 'Role account add | verify | user/group all values'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Role account add | verify | user/group all values |
        query group_all_specified_values
      ansible.builtin.getent:
        database: 'group'
        key: 'group_all_specified_values'

    - name: >
        Role account add | verify | user/group all values |
        assert group group_all_specified_values
      ansible.builtin.assert:
        quiet: true
        that:
          - '"group_all_specified_values" in ansible_facts.getent_group'
          - ansible_facts.getent_group.group_all_specified_values[1] == '1500'
        success_msg: 'group_all_specified_values correct.'
        fail_msg: '✘ group_all_specified_values incorrect passwd values.'

    - name: >
        Role account add | verify | user/group all values |
        query user_all_specified_values
      ansible.builtin.getent:
        database: 'passwd'
        key: 'user_all_specified_values'

    - name: >
        Role account add | verify | user/group all values |
        assert user user_all_specified_values
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_all_specified_values" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.user_all_specified_values[1] == '1500'
          - ansible_facts.getent_passwd.user_all_specified_values[2] == '1500'
          - ansible_facts.getent_passwd.user_all_specified_values[3] == '(logins disabled)'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.user_all_specified_values[4] == '/etc/test_location'  # yamllint disable-line rule:line-length
          - ansible_facts.getent_passwd.user_all_specified_values[5] == '/bin/bash'  # yamllint disable-line rule:line-length
        success_msg: 'user_all_specified_values correct.'
        fail_msg: '✘ user_all_specified_values incorrect passwd values.'

- name: 'Role account add | verify | simultaneous user/group'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: >
        Role account add | verify | simultaneous user/group |
        query user_simul_user
      ansible.builtin.getent:
        database: 'passwd'
        key: 'user_simul_user'

    - name: >
        Role account add | verify | simultaneous user/group |
        query user_simul_group
      ansible.builtin.getent:
        database: 'group'
        key: 'user_simul_group'

    - name: >
        Role account add | verify | simultaneous user/group |
        assert group user_simul_group
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_simul_group" in ansible_facts.getent_group'
          - ansible_facts.getent_group.user_simul_group[1] == '1550'
        success_msg: 'user_simul_group correct.'
        fail_msg: '✘ user_simul_group incorrect passwd values.'

    - name: >
        Role account add | verify | simultaneous user/group |
        assert user user_simul_user
      ansible.builtin.assert:
        quiet: true
        that:
          - '"user_simul_user" in ansible_facts.getent_passwd'
          - ansible_facts.getent_passwd.user_simul_user[1] == '1550'
          - ansible_facts.getent_passwd.user_simul_user[2] == '1551'
        success_msg: 'user_simul_user correct.'
        fail_msg: '✘ user_simul_user incorrect passwd values.'
