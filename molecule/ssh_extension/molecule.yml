---
# yamllint disable rule:line-length
###############################################################################
# Role Account Add
###############################################################################
# Verify SSH extension works properly; apply to both user and role accounts to
# verify no divergence between account types.
#
# Tests:
# * Existing keys are not overwritten ~/.ssh/{id_ed25519, id_ed25519.pub,
#   config, authorized_keys}.
# * Force overwritten keys ~/.ssh/{id_rsa, id_rsa.pub, config, id_dsa} are
#   overwritten.

dependency:
  name: 'galaxy'
driver:
  name: 'podman'
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'
      callback_whitelist: 'profile_tasks, timer, yaml'
    ssh_connection:
      pipelining: false
  inventory:
    group_vars:
      all:
        users_accounts_users:
          - 'ssh_extension'
          - 'ssh_extension_conflict'
        users_group_ssh_extension:
          name: 'ssh_extension'
          gid: 800
        users_user_ssh_extension:
          name: 'ssh_extension'
          group: 'ssh_extension'
          home: '/home/ssh_extension'
          uid: 800
          ssh_key_bits: 1024
          ssh_key_comment: 'test ssh key'
          ssh_key_file: '.ssh/id_rsa'
          ssh_key_passphrase: ''
          ssh_key_type: 'rsa'
          extensions:
            include_group: true
            ssh:
              ssh_keys:
                - name: 'id_ed25519'
                  public: 'ed25519 test key'
                  private: 'ed25519 test key'
                - name: 'id_dsa'
                  public: 'dsa test key'
                  private: 'dsa test key'
              authorized_keys:
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMhBAfOHhGCFogTZ+ayHlpGB1UMUaz4+Xyvc/CfFg9RM test@example'
                  key_options: 'no-port-forwarding,from="10.0.1.1"'
                  manage_dir: true
                  state: 'present'
                  comment: 'test comment'
                  exclusive: false
                  follow: false
                  validate_certs: true
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPYcyQE4poai5Kx1Isr5Okkt7i357tpaTWybMjS+oyG/ test@remove_key'
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPYcyQE4poai5Kx1Isr5Okkt7i357tpaTWybMjS+oyG/ test@remove_key'
                  state: 'absent'
              config: |
                # auto-accept new host keys
                Host *
                  StrictHostKeyChecking accept-new
        users_group_ssh_extension_conflict:
          name: 'ssh_extension_conflict'
          gid: 810
        users_user_ssh_extension_conflict:
          name: 'ssh_extension_conflict'
          group: 'ssh_extension_conflict'
          home: '/home/ssh_extension_conflict'
          uid: 810
          ssh_key_bits: 1024
          ssh_key_comment: 'test ssh key'
          ssh_key_file: '.ssh/id_rsa'
          ssh_key_passphrase: ''
          ssh_key_type: 'rsa'
          extensions:
            include_group: true
            ssh:
              ssh_keys:
                - name: 'id_rsa'
                  public: 'id_rsa conflict key overwrites'
                  private: 'id_rsa conflict key overwrites'
                - name: 'id_dsa'
                  public: 'key should be deleted'
                  state: 'absent'
              authorized_keys:
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMhBAfOHhGCFogTZ+ayHlpGB1UMUaz4+Xyvc/CfFg9RM test@example'
                  key_options: 'no-port-forwarding,from="10.0.1.1"'
                  manage_dir: true
                  state: 'present'
                  comment: 'test comment'
                  exclusive: false
                  follow: false
                  validate_certs: true
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPYcyQE4poai5Kx1Isr5Okkt7i357tpaTWybMjS+oyG/ test@remove_key'
                - key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPYcyQE4poai5Kx1Isr5Okkt7i357tpaTWybMjS+oyG/ test@remove_key'
                  state: 'absent'
              config: |
                # auto-accept new host keys
                Host *
                  StrictHostKeyChecking accept-new
        users_role_group: '{{ users_group_ssh_extension }}'
        users_role_user: '{{ users_user_ssh_extension }}'
platforms:
  - name: 'user-debian-12-ssh_extension-user'
    image: 'ghcr.io/hifis-net/debian-systemd:12'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
  - name: 'user-debian-12-ssh_extension-role'
    image: 'ghcr.io/hifis-net/debian-systemd:12'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    # - 'dependency'
    # - 'cleanup'
    - 'destroy'
    - 'syntax'
    - 'create'
    # - 'prepare'
    - 'converge'
    # - 'idempotence'  # User accounts are only created once.
    # - 'side_effect'
    - 'verify'
    # - 'cleanup'
    - 'destroy'
